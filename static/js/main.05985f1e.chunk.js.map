{"version":3,"sources":["Component/ContactForm/ContactForm.module.css","Component/ContactList/ContactListItem/ContactListItem.module.css","Component/Container/Container.module.css","Component/ContactForm/AddContactBtn/AddContactBtn.module.css","Component/ContactList/ContactList.module.css","Component/Container/Container.jsx","Component/ContactForm/AddContactBtn/AddContactBtn.jsx","Component/ContactForm/ContactForm.jsx","Component/ContactList/ContactListItem/ContactListItem.jsx","Component/ContactList/ContactsList.jsx","Component/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","AddContactBtn","button","type","INITIAL_STATE","name","number","ContactForm","state","reset","setState","handleSubmit","e","preventDefault","contact","id","uuidv4","props","onSubmitForm","handleInputChange","currentTarget","value","labelInputIdName","labelInputIdNumber","this","form","onSubmit","label","htmlFor","input","placeholder","pattern","title","required","onChange","Component","ContactListItem","onDeleteContact","contactListItem","deleteContactBtn","onClick","ContactList","filteredContacts","list","map","item","Filter","onHandleChange","notify","message","toast","error","App","contacts","filter","handleSubmitForm","undefined","find","handleChange","deleteContact","prevState","getFilteredContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05985f1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1B4yp\",\"label\":\"ContactForm_label__3q_YB\",\"input\":\"ContactForm_input__16VyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteContactBtn\":\"ContactListItem_deleteContactBtn__3oVYw\",\"contactListItem\":\"ContactListItem_contactListItem__35YNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__306qO\",\"marching-ants\":\"Container_marching-ants__2Jhfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AddContactBtn_button__OI9IC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__gngHT\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nexport default Container;\n","import styles from './AddContactBtn.module.css';\n\nconst AddContactBtn = () => {\n  return (\n    <button className={styles.button} type=\"submit\">\n      +\n    </button>\n  );\n};\n\nexport default AddContactBtn;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AddContactBtn from './AddContactBtn/AddContactBtn';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contact = { id: uuidv4(), name, number };\n    this.props.onSubmitForm(contact);\n    this.reset();\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  labelInputIdName = uuidv4();\n  labelInputIdNumber = uuidv4();\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label} htmlFor={this.labelInputIdName}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            id={this.labelInputIdName}\n            name=\"name\"\n            value={name}\n            placeholder=\"Julia Melnik\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleInputChange}\n          ></input>\n        </label>\n\n        <label className={styles.label} htmlFor={this.labelInputIdNumber}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            id={this.labelInputIdNumber}\n            name=\"number\"\n            value={number}\n            placeholder=\"+380...\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleInputChange}\n          ></input>\n        </label>\n\n        <AddContactBtn />\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, onDeleteContact, id }) => {\n  return (\n    <li className={styles.contactListItem}>\n      <span>{name}</span>: <span>{number}</span>\n      <button\n        className={styles.deleteContactBtn}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        X\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ filteredContacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {filteredContacts.map(item => (\n        <ContactListItem\n          key={item.id}\n          id={item.id}\n          name={item.name}\n          number={item.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from '../ContactForm/ContactForm.module.css';\n\nconst Filter = ({ value, onHandleChange }) => {\n  return (\n    <div>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          placeholder=\"Search contact\"\n          name=\"filter\"\n          value={value}\n          onChange={onHandleChange}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport Container from './Component/Container';\nimport ContactForm from './Component/ContactForm';\nimport ContactList from './Component/ContactList';\nimport Filter from './Component/Filter/Filter';\nimport toast, { Toaster } from 'react-hot-toast';\n// { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n// { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n// { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n// { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\nconst notify = message => toast.error(message);\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  handleSubmitForm = contact => {\n    const isInContacts = this.state.contacts.find(\n      item => item.name === contact.name,\n    );\n    if (isInContacts !== undefined) {\n      return notify(`${contact.name} is already in contacts`);\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  handleChange = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitForm={this.handleSubmitForm} />\n        <h2>Contacts</h2>\n        <Toaster />\n        <Filter value={filter} onHandleChange={this.handleChange} />\n        <ContactList\n          filteredContacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}